<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python[python] | My Octopress Blog]]></title>
  <link href="http://yoursite.com/blog/categories/python-python/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-01-01T01:02:39+08:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python 中关于变量作用域的一些demo]]></title>
    <link href="http://yoursite.com/blog/2013/04/15/some-demo-for-python-varients-scope/"/>
    <updated>2013-04-15T22:41:00+08:00</updated>
    <id>http://yoursite.com/blog/2013/04/15/some-demo-for-python-varients-scope</id>
    <content type="html"><![CDATA[<p>其实青蛙不是很想在blog里面说编程方面的东西，毕竟青蛙自己只
是个半调子，怕言多有失。不过这次遇到了一个很常见又很有趣的
问题，记下一笔，权当取乐。</p>

<p>话说上周一个同事在patch里面使用了一种比较hacker的方法[1]：</p>

<p>使用定义list成员的方式把函数的局部变量传递给sub-function并
在sub-function修改其内容。</p>

<p>这种做法被其他同事猛烈的抨击，实际上在python2.x中，因为语言
实现的问题，嵌套的子函数是没法直接写它的上层函数的变量的。</p>

<p>这个问题之前在Team内部没有引起足够的重视，大家习以为常的在
子函数里直接给一个父函数的变量赋值，结果都是错的，这个赋值
操作会直接引发异常。</p>

<p>有人总结了一下python嵌套子函数访问变量的行为[2]:</p>

<pre><code>In Python 2.x, it is not possible to modify a non-local variable;
you have either read-only access to a global or non-local variable,
or read-write access to a global variable by using the global statement,
or read-write access to a local variable (the default). 
That's just the way it's been designed (probably for performance and purity).

In Python 3, the nonlocal statement has been introduced with
a similar effect to global, but for an intermediate scope.
</code></pre>

<p>青蛙根据上面的总结写了几个函数的demo，然后引发了更深入的讨论，
于是终于引出了PEP-3104[3]。</p>

<p>这是青蛙最开始的例子，</p>

<p><code>f1()</code>是最基本的函数调用，其中操作的foo也是f1内部的foo。</p>

<p><code>f2()</code>用到了global关键字，声明全局的foo变量，这是f2操作的就是全局
的foo了。</p>

<p><code>f3()</code>是错误的操作，子函数会直接抛出异常。</p>

<p><code>f4()</code>是使用list的方法避开命名空间的问题，因为在嵌套函数中依然可以
读取上层函数的变量，于是<code>sub_func</code>可以访问到那个list foo，然后可以
进一步操作其成员。</p>

<p><code>f5()</code>实际上操作的还是全局的foo。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>first.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">foo</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">I</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="n">m</span> <span class="k">global</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f1</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">foo</span> <span class="o">=</span> <span class="s">&quot;I&#39;m a string&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;foo in f1: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f2</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">global</span> <span class="n">foo</span>
</span><span class='line'><span class="n">foo</span> <span class="o">+=</span> <span class="s">&quot; and modified in f2&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;foo in f2: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f3</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">foo</span> <span class="o">=</span> <span class="s">&quot;I&#39;m in f3&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sub_func</span><span class="p">():</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">foo</span> <span class="o">+=</span> <span class="s">&quot; and modified in f3&#39;s sub function&quot;</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;foo in sub_func of f3: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;oops in sub_func of f3: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span>
</span><span class='line'>
</span><span class='line'><span class="n">sub_func</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;foo in f3: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f4</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">foo</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;I&#39;m in f4&quot;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sub_func</span><span class="p">():</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">foo</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="s">&quot; and modified in f4&#39;s sub function&quot;</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;foo in sub_func of f4: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;oops in sub_func of f4: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span>
</span><span class='line'>
</span><span class='line'><span class="n">sub_func</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;foo in f4: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f5</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">foo</span> <span class="o">=</span> <span class="s">&quot;I&#39;m in f5&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sub_func</span><span class="p">():</span>
</span><span class='line'>    <span class="k">global</span> <span class="n">foo</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">foo</span> <span class="o">+=</span> <span class="s">&quot; and modified in f5&#39;s sub function&quot;</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;foo in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;oops in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span>
</span><span class='line'>
</span><span class='line'><span class="n">sub_func</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;foo in f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">f1</span><span class="p">()</span>
</span><span class='line'><span class="n">f2</span><span class="p">()</span>
</span><span class='line'><span class="n">f3</span><span class="p">()</span>
</span><span class='line'><span class="n">f4</span><span class="p">()</span>
</span><span class='line'><span class="n">f5</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在PEP-3104中，定义了一个<code>nonlocal</code>关键字，这个字的作用就是声明
一个变量既不是<code>local</code>的也不是<code>global</code>的，而是上层函数（outer scope）
中的。</p>

<p>但是在Python2.x中仍然没有这个<code>nolocal</code>关键字，PEP-3104中也给出
了两种实现来解决这类问题：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>3104-1.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f5</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">f5</span><span class="o">.</span><span class="n">foo</span> <span class="o">=</span> <span class="s">&quot;I&#39;m in f5&quot;</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">sub_func</span><span class="p">():</span>
</span><span class='line'>     <span class="k">try</span><span class="p">:</span>
</span><span class='line'>         <span class="n">f5</span><span class="o">.</span><span class="n">foo</span> <span class="o">+=</span> <span class="s">&quot; and modified in f5&#39;s sub function&quot;</span>
</span><span class='line'>         <span class="k">print</span> <span class="s">&quot;foo in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">f5</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'>     <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>         <span class="k">print</span> <span class="s">&quot;oops in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span>
</span><span class='line'>
</span><span class='line'> <span class="n">sub_func</span><span class="p">()</span>
</span><span class='line'> <span class="k">print</span> <span class="s">&quot;foo in f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">f5</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">f5</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>3104-2.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Namespace</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">pass</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">f5</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">ns</span> <span class="o">=</span> <span class="n">Namespace</span><span class="p">()</span>
</span><span class='line'> <span class="n">ns</span><span class="o">.</span><span class="n">foo</span> <span class="o">=</span> <span class="s">&quot;I&#39;m in f5&quot;</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">sub_func</span><span class="p">():</span>
</span><span class='line'>     <span class="k">try</span><span class="p">:</span>
</span><span class='line'>         <span class="n">ns</span><span class="o">.</span><span class="n">foo</span> <span class="o">+=</span> <span class="s">&quot; and modified in f5&#39;s sub function&quot;</span>
</span><span class='line'>         <span class="k">print</span> <span class="s">&quot;foo in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">ns</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'>     <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>         <span class="k">print</span> <span class="s">&quot;oops in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span>
</span><span class='line'>
</span><span class='line'> <span class="n">sub_func</span><span class="p">()</span>
</span><span class='line'> <span class="k">print</span> <span class="s">&quot;foo in f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">ns</span><span class="o">.</span><span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">f5</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这两种方法本质上就是给变量bind到了其他地方（一个类成员，
一个函数成员）。这样在嵌套函数里可以访问一个全局的类的
成员来达到访问这个变量的目的。
本质上还是把变量扔进了<code>globals()</code>，随意青蛙并不推崇这种
方式。</p>

<p>而在上层函数定义list或者dict的方法，看起来hacker，所以
青蛙也不是太喜欢。</p>

<p>青蛙自己的方式是把上层函数的变量作为参数传入嵌套函数，
然后在嵌套函数中把修改后的结果作为返回值返回。虽然这种
方法看起来像C，有点不pythonic，但是免去了那些命名空间
猜来猜去的麻烦。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>final-f5.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">f5</span><span class="p">():</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">foo</span> <span class="o">=</span> <span class="s">&quot;I&#39;m in f5&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">sub_func</span><span class="p">(</span><span class="n">foo</span><span class="p">):</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">foo</span> <span class="o">+=</span> <span class="s">&quot; and modified in f5&#39;s sub function&quot;</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;foo in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;oops in sub_func of f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">e</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">foo</span>
</span><span class='line'>
</span><span class='line'><span class="n">foo</span> <span class="o">=</span> <span class="n">sub_func</span><span class="p">(</span><span class="n">foo</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;foo in f5: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">foo</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>[1]. <a href="http://stackoverflow.com/questions/6198709/how-do-i-change-nesting-functions-variable-in-the-nested-function">How do I change nesting function&rsquo;s variable in the nested function</a></p>

<p>[2]. <a href="http://stackoverflow.com/questions/13282910/python-cant-access-nonlocal-variable-before-local-variable-is-defined-with-same">python can&rsquo;t access nonlocal variable before local variable is defined with same name</a></p>

<p>[3]. <a href="http://www.python.org/dev/peps/pep-3104/">PEP-3104</a></p>
]]></content>
  </entry>
  
</feed>
